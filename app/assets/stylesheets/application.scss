/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require foundation_and_overrides
 */

@import 'foundation_and_overrides';
@import 'settings';

@include mui-series {
  .slide-down-1 {
    @include mui-queue(0.5s, 0s, slide($state: in, $direction: down, $amount: 250%))
  }
  .slide-in-1 {
    @include mui-queue(0.5s, 0s, slide($state: in, $direction: right, $amount: 250%));
  }
  .slide-in-2 {
    @include mui-queue(0.5s, 0s, slide($state: in, $direction: left, $amount: 250%));
  }
}

.recipe-show {
  text-align: center;
}

.article-card {
  background: $white;
  border: 1px solid #d7d7d7;
  border-bottom-width: 0px;
  margin-top: 1.5rem;
  margin-left: 2rem;
  text-align: center;
  padding: -10rem;
  box-shadow: 2px 4px 5px 0 #d7d7d7;
  .small-12 {
    padding: 10px;
  }
  .card-content {
    background: #fff;
    // margin: 1.25rem;
    .post-author {
        text-align: center;
    }

    p {
      color: #757D75;
    }
    a i {
      font-weight: 300;
      color: #757D75;
      margin: 0 0.5rem;
      padding: 5px 7px;
      border: 1px solid #757D75;
      border-radius: 50%;
    }
    img {
      width: 225px;
      height: 150px;
    }
    img.post-icon {
      position: absolute;
      width: 3rem;
      border-radius: 50%;
      margin-top: -3rem;
    }
    h1, h2, h3, h4, h5 {
      display: inline;
    }
  }
}

.right-arrow {
	display: inline-block;
	position: relative;
	background: map-get($foundation-palette, tertiary);
	padding: 5px;
  width: 100px;
  text-align: center;
  float: right;
  border-radius: 7px;
}
.right-arrow:after {
	content: '';
	display: block;
	position: absolute;
	left: 100%;
	top: 50%;
	margin-top: -10px;
	width: 0;
	height: 0;
	border-top: 10px solid transparent;
	border-right: 10px solid transparent;
	border-bottom: 10px solid transparent;
	border-left: 10px solid map-get($foundation-palette, tertiary);
}

.left-arrow {
	display: inline-block;
	position: relative;
	background: map-get($foundation-palette, secondary);
	padding: 5px;
  width: 100px;
  text-align: center;
  border-radius: 7px;
}
.left-arrow:after {
	content: '';
	display: block;
	position: absolute;
	right: 100%;
	top: 50%;
	margin-top: -10px;
	width: 0;
	height: 0;
	border-top: 10px solid transparent;
	border-right: 10px solid map-get($foundation-palette, secondary);
	border-bottom: 10px solid transparent;
	border-left: 10px solid transparent;
}

// variables
$accordion-bg: map-get($foundation-palette, tertiary);
$accordion-sub-bg: scale-color(map-get($foundation-palette, tertiary), $lightness: -30%);
$accordion-separator: scale-color(map-get($foundation-palette, tertiary), $lightness: -50%);

.accordion-menu {
  margin-top: 1.5rem;
}

// background for main accordion items
.is-accordion-submenu-parent a {
  background: $accordion-bg;
}

// background for sub accordion items
.is-accordion-submenu a {
  background: $accordion-sub-bg;
}

// style for folder icon on subitem anchors without a submenu
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="true"] a.subitem::before {
  content: "\f016";
  font-family: $body-font-family;
  margin-right: 1rem;
}

// changes folder icon to open then accordion is open
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="true"] a {
  &::before {
    content: "\f07c";
    font-family: $body-font-family;
    margin-right: 1rem;
  }
}

// changes folder icon to closed then accordion is closed
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="false"] a {
  &::before {
    content: "\f07b";
    font-family: $body-font-family;
    margin-right: 1rem;
  }
}

// creates classes for nested elements, sub-item-*
@for $i from 1 through 6 {
  .sublevel-#{$i} {
    text-indent: 0rem + $i;
  }
}

[data-accordion-menu] {
  a {
    color: $body-font-color;
    // sets accodion item separator color
    box-shadow: inset 0 -1px $accordion-separator;

    &::after {
      // sets accodion arrow color and direction
      border-color: #fff transparent transparent;
    }
  }
}

// padding for each list item
.menu > li:not(.menu-text) > a {
  padding: 1.2rem 1rem;
}
